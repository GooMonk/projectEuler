package problem2

/*
Problem Statement: Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

// Generic implementation of the problem statement where function takes 3 arguments, namely a and b corresponding to the starting elements of Fibonacci series and n corresponding to number till where we want the even sum
func EvenFibSum(a, b, n int64) int64 {
	if a < 0 || b < 0 || n < 0 {
		return -1
	}
	if a >= n || b >= n {
		return -1
	}

	if a > b {
		a, b = b, a
	}

	var res, element1, element2 int64

	if a%2 == 0 {
		res += a
	}

	if b%2 == 0 {
		res += b
	}

	element1 = b
	for element2 = a + b; element2 < n; {
		if element2%2 == 0 {
			res += element2
		}
		element1, element2 = element2, element1+element2
	}

	return res
}
